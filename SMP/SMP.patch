diff --git a/src/file/keydb.h b/src/file/keydb.h
index c98762f..cd81223 100644
--- a/src/file/keydb.h
+++ b/src/file/keydb.h
@@ -3,20 +3,11 @@
 
 static const uint32_t internal_device_number = 0;
 
-static const uint8_t internal_dk_list[][21] = {
-  {
-  },
-};
+static const uint8_t internal_dk_list[][21] = {0};
 
-static const uint8_t internal_pk_list[][16] = {
-  {
-  },
-};
+static const uint8_t internal_pk_list[][16] = {0};
 
-static const uint8_t internal_hc_list[][112] = {
-  {
-  },
-};
+static const uint8_t internal_hc_list[][112] = {0};
 
 /* customize this function to "hide" the keys in the binary */
 
diff --git a/src/libaacs/crypto.c b/src/libaacs/crypto.c
index 0dfabdd..417cc8c 100644
--- a/src/libaacs/crypto.c
+++ b/src/libaacs/crypto.c
@@ -396,22 +396,26 @@ static gcry_error_t _aacs_sexp_hash(gcry_sexp_t *p_sexp_data,
     }
 
     /* Build an s-expression for the hash */
-    GCRY_VERIFY("gcry_sexp_build",
-                gcry_sexp_build(p_sexp_data, NULL,
-                                "(data"
 #if defined(GCRYPT_VERSION_NUMBER) && GCRYPT_VERSION_NUMBER >= 0x010600
                                 /*
                                  * For some reason gcrypt 1.6.0
                                  * requires 'param' flag here and not
                                  * in key, probably a bug.
                                  */
-                                "  (flags raw param)"
+    GCRY_VERIFY( "gcry_sexp_build",
+        gcry_sexp_build( p_sexp_data, NULL,
+        "(data""  (flags raw param)"
+        "  (value %m))",
+        mpi_md
+        ));
 #else
-                                "  (flags raw)"
+    GCRY_VERIFY( "gcry_sexp_build",
+        gcry_sexp_build( p_sexp_data, NULL,
+        "(data""  (flags raw)"
+        "  (value %m))",
+        mpi_md
+        ) );
 #endif
-                                "  (value %m))",
-                                mpi_md
-                                ));
 
     /* Dump information about the data s-expression when debugging */
     if (GCRYPT_DEBUG) {
